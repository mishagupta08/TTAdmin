@model TTGarmentAdmin.Models.DashboardModel
@{
    ViewBag.Title = "_notificationListPartialView";
    Layout = null;
}

@*<link href="@Url.Content("~/Content/Gridmvc.css")" rel="stylesheet" />
    <link href="@Url.Content("~/Content/bootstrap.min.css")" rel="stylesheet" />*@

<style>
    .box-style {
        width: 25% !important;
        display: inline-block !important;
        height: 38px !important;
        margin: 0px 29px !important;
    }

    .search-button-style {
        display: inline-block;
        width: 13%;
        height: 36px;
        margin-left: 5%;
        margin-top: -5px;
    }

    table.grid-table {
        font-size: 11px;
    }
</style>
@********Dialogue box code**********@
<a class="nav-link" id="deleteLink" data-toggle="modal" data-target="#DeleteStatusModal">
</a>
<div class="modal fade" id="DeleteStatusModal" tabindex="-1" role="dialog" aria-labelledby="ImageStatusModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Status</h5>
                <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body" id="responseMessage"></div>
            <div class="modal-footer">
                <button class="btn btn-secondary" type="button" id="deleteBtn" data-dismiss="modal">OK</button>
            </div>
        </div>
    </div>
</div>
@********Dialogue box code*END*********@
@helper CustomRenderingOfResultColumn(decimal? sCount, decimal? fCount, decimal? notificationCount, string date)
{
    <div>
        <div>Success Count: @sCount</div>
        <div>Failed Count: @fCount</div>
        <div>Notification ID Count: @notificationCount</div>
        <div>Result Date: @date</div>
    </div>
}

@helper CustomRenderingOfSendTypeColumn(bool broadcast, int? stateCode, string stateName, int? cityCode, string cityName)
{
if (broadcast)
{
        <span>Broadcast To All</span>
}
else
{
        <div>
            <span>State : @stateCode # @stateName</span>
            <span>City :  @cityCode # @cityName</span>
        </div>
}
}

@****** New code for Notificaton ******@
<div class="card mb-3" id="responseContainer">
    <div class="card-header">
        <i class="fa fa-table"></i> Notification List
        <button id="export" class="btn btn-info btn-sm left btn-block text-uppercase waves-effect waves-light" style="float: right;  width: 10% !important;  margin: 0px !important;">Export</button>
        <div style="display:none;">@Html.Raw(Model.TableString)</div>

        @*/**filters  - Start**/*@
        <form data-parsley-validate style="margin-top:10px; margin-left:50px;" class="validateForm form-horizontal">
            <div class="form-group" style="display:inline-block;">
                <label>Filter Type</label>
                @Html.DropDownListFor(m => m.FilterDetail.SelectedFilterName, new SelectList(Model.FilterDetail.FilterName), new { @required = "0", id = "filterList", name = "filters", @class = "form-control" })
            </div>
            <div class="form-group" style="display:inline-block; margin-left:6%">
                <label>Filter Value</label>
                @Html.TextBoxFor(m => m.FilterDetail.FilterValue, new { @id = "filterValue", @required = "required", @class = "form-control", @style = "height: 38px;", @placeholder = "Value" })
            </div>

            <button id="searchButton" data-view="Notification" type="button" class="search-button-style btn btn-info btn-sm left btn-block text-uppercase waves-effect waves-light">Search</button>
        </form>
        @*/**filters - End**/*@
    </div>
    <div class="card-body">
        @if (Model.NotificationList == null || Model.NotificationList == null || Model.NotificationList.Count == 0)
        {
            <div>No record Found</div>
        }
        else
        {
            <div class="table-responsive">
                <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>Id</th>
                            <th>Notification Publish Date</th>
                            <th>Header</th>
                            <th>Notification Message</th>
                            <th>Is Replyable</th>
                            <th>Error</th>
                            <th>Notification Result</th>
                            <th>Broadcast Type</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var noti in Model.NotificationList)
                        {
                            <tr>
                                <td>@noti.Id</td>
                                <td>
                                    @String.Format("{0:yyyy/MM/dd h:mm:ss tt}", noti.Date)
                                </td>
                                <td>@noti.Header</td>
                                <td>@noti.Notification</td>
                                <td>@noti.IsReplyable</td>
                                <td>@noti.Exception</td>
                                <td>
                                    @CustomRenderingOfResultColumn(noti.SuccessMessageCount, noti.FailMessageCount, noti.NotificationIdCount, noti.ResultDate)
                                </td>
                                <td>@CustomRenderingOfSendTypeColumn(noti.Boradcast, noti.StateCode, noti.StateName, noti.CityCode, noti.CityName)</td>
                                <td><img src="~/images/delete.png" height="20" data-id="@noti.Id" name="deleteNotification" /></td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>
</div>

@*****END*******@

@*<div class="col-lg-12" style="margin-left: 5px;" id="responseContainer">
        @if (Model.NotificationList == null || Model.NotificationList == null || Model.NotificationList.Count == 0)
        {
            <div>No record Found</div>
        }
        else
        {
            /**filters  - Start**/
            <form data-parsley-validate class="validateForm form-horizontal">
                <div class="form-group" style="display:inline-block;">
                    <label>Filter Type</label>
                    @Html.DropDownListFor(m => m.FilterDetail.SelectedFilterName, new SelectList(Model.FilterDetail.FilterName), new { @required = "0", id = "filterList", name = "filters", @class = "form-control" })
                </div>
                <div class="form-group" style="display:inline-block; margin-left:6%">
                    <label>Filter Value</label>
                    @Html.TextBoxFor(m => m.FilterDetail.FilterValue, new { @id = "filterValue", @required = "required", @class = "form-control", @style = "height: 38px;", @placeholder = "Value" })
                </div>

                <button id="searchButton" data-view="Notification" type="button" class="search-button-style btn btn-info btn-sm left btn-block text-uppercase waves-effect waves-light">Search</button>
            </form>
            /**filters - End**/

            <button id="export" class="btn btn-info btn-sm left btn-block text-uppercase waves-effect waves-light" style="float: right;  width: 10% !important;  margin: 0px !important;">Export</button>

            @Html.Grid(Model.NotificationList).Columns(columns =>
       {
           columns.Add(c => c.Id).Encoded(false).Sanitized(false).Titled("Id").Filterable(true);
           columns.Add(c => c.Date).Encoded(false).Sanitized(false).Titled("Notification Publish Date").Filterable(true);
           columns.Add(c => c.Header).Encoded(false).Sanitized(false).Titled("Header").Filterable(true);
           columns.Add(c => c.Notification).Encoded(false).Sanitized(false).Titled("Notification Message").Filterable(true);
           columns.Add(c => c.IsReplyable).Encoded(false).Sanitized(false).Titled("Is Replyable").Filterable(true);
           columns.Add(c => c.Exception).Encoded(false).Sanitized(false).Titled("Error").Filterable(true);
           columns.Add().Encoded(false).Titled("Notification Result").Sanitized(false).RenderValueAs(o => CustomRenderingOfResultColumn(o.SuccessMessageCount, o.FailMessageCount, o.NotificationIdCount, o.ResultDate));
           columns.Add().Encoded(false).Titled("Broadcast Type").Sanitized(false).RenderValueAs(o => CustomRenderingOfSendTypeColumn(o.Boradcast, o.StateCode, o.StateName, o.CityCode, o.CityName));
           //columns.Add().Encoded(false).Titled("Action").Sanitized(false).RenderValueAs(o => CustomRenderingOfActionColumn(o.Id));
       }).WithPaging(15).Sortable(true)
        }

        <div id="error">@Model.Error</div>
    </div>*@

<script src="@Url.Content("~/Scripts/jquery-1.10.2.min.js")"></script>
@*<script src="@Url.Content("~/Scripts/gridmvc.min.js")"></script>*@

<script src="~/Scripts/jquery.min.js"></script>
<script src="~/Scripts/jquery-ui.min.js"></script>

<script src="~/Scripts/Project/dashboard.js"></script>
<script src="~/Scripts/jquery.table2excel.min.js"></script>

<script>
    var jq = $.noConflict();
    jq(".preloader").hide();
    jq(document).ready(function () {
        if (jq("#export").length > 0) {
            jq("#export").unbind();
            jq("#export").click(function () {
                jq(".grid-table").unbind();
                var dateToday = new Date();
                jq(".grid-table").table2excel({
                    exclude: ".noExl",
                    name: "Excel Document Name",
                    filename: "Notification-" + dateToday,
                    fileext: ".xls",
                    exclude_img: true,
                    exclude_links: true,
                    exclude_inputs: true
                });
            });
        }
    });
</script>


