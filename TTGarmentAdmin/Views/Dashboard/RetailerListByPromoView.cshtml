@model TTGarmentAdmin.Models.DashboardModel
@*@using GridMvc.Html*@
@{
    ViewBag.Title = "Retailers";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@*<link href="@Url.Content("~/Content/Gridmvc.css")" rel="stylesheet" />
    <link href="@Url.Content("~/Content/bootstrap.min.css")" rel="stylesheet" />*@

<style>
    table.grid-table .grid-header > .grid-header-title {
        margin-right: 10px !important;
    }

    .box-style {
        width: 25% !important;
        display: inline-block !important;
        height: 38px !important;
        margin: 0px 29px !important;
    }

    table.grid-table {
        font-size: 10px;
    }

    .image-col-width {
        width: 20px !important;
    }
</style>

<div class="row">
    <div id="updatePromoStatusDialog" title="Status" style="display:none;">
        <p id="responseMessage"></p>
        <button type="submit" Id="UpdateStatusOkButton">Ok</button>
    </div>


    @helper CustomRenderingOfViewColumn(string promoId, string retailerId)
    {
    <a href="@Url.Action("ListRetailerImagesView", "Dashboard", new { PromoId = promoId, RetailerId = retailerId })">View</a>
}
    @helper CustomRenderingOfApprovedColumn(string promoId, string retailerId, bool? status)
    {
var approveClass = string.Empty;
var rejectClass = string.Empty;
if (status == true)
{
    approveClass = "disabled";
}
else
{
    rejectClass = "disabled";
}

    <button name="updatePromoStatusBtn" @approveClass data-promo-id="@promoId" data-action="true" data-ret-id="@retailerId" class="btn btn-info btn-sm left btn-block text-uppercase waves-effect waves-light" style="width: 80px !important;  margin: 0px !important; display:inline-block;">Approve</button>
    <button @rejectClass name="updatePromoStatusBtn" data-promo-id="@promoId" data-action="false" data-ret-id="@retailerId" class="btn btn-info btn-sm left btn-block text-uppercase waves-effect waves-light" style="width: 60px !important;  margin: 0px !important; margin-left:10px; display:inline-block; background: red;">Reject</button>
}
    <div class="card mb-3" id="responseContainer">
        <div class="card-header">
            <i class="fa fa-table"></i> Retailer Entries For Promotion
            @*<button id="export" class="btn btn-info btn-sm left btn-block text-uppercase waves-effect waves-light" style="float: right;  width: 10% !important;  margin: 0px !important;">Export</button>*@
        </div>
        <div class="card-body">
            @if (Model.RetailerListByPromoId == null || Model.RetailerListByPromoId == null || Model.RetailerListByPromoId.Count == 0)
            {
                <div>No record Found</div>
            }
            else
            {
                <div style="font-size:11px;">
                    <div>
                        <div style="margin-bottom:4px;"><span>Promotion Id : </span><span>@Model.PromotionDetail.Id</span></div>
                        <div style="margin-bottom:4px;"><span>Promotion Heading : </span><span>@Model.PromotionDetail.Heading</span></div>
                    </div>
                    <span>@Model.PromotionDetail.HeadingText</span>
                </div>
                <br />
                <div style="margin-top:10px;" class="table-responsive">
                    <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                        <thead>
                            <tr>
                                <th>Id</th>
                                <th>Firm Name</th>
                                <th>Upload Image By retailer count</th>
                                <th>Approved Image count</th>
                                <th width="130px;">Action</th>
                                <th>View Detail Page</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var detail in Model.RetailerListByPromoId)
                            {
                                <tr>
                                    <td>@detail.RetailerId</td>
                                    <td>@detail.RetailerFirmName</td>
                                    <td>@detail.UploadImagecount</td>
                                    <td>@detail.ApprovedImagecount</td>
                                    <td>
                                        @CustomRenderingOfApprovedColumn(detail.PromoId, detail.RetailerId, detail.IsApproved)
                                    </td>
                                    <td>@CustomRenderingOfViewColumn(detail.PromoId, detail.RetailerId)</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
    </div>

    @*<div class="col-lg-12" style="margin-left: 5px;" id="responseContainer">
            @if (Model.RetailerListByPromoId == null || Model.RetailerListByPromoId == null || Model.RetailerListByPromoId.Count == 0)
            {
                <div>No record Found</div>
            }
            else
            {
                <div style="font-size:11px;">
                    <div>
                        <div style="margin-bottom:4px;"><span>Promotion Id : </span><span>@Model.PromotionDetail.Id</span></div>
                        <div style="margin-bottom:4px;"><span>Promotion Heading : </span><span>@Model.PromotionDetail.Heading</span></div>
                    </div>
                    <span>@Model.PromotionDetail.HeadingText</span>
                </div>
                <br />
                <h5>Retailer Entries For Promotion</h5>

                @Html.Grid(Model.RetailerListByPromoId).Columns(columns =>
           {
               columns.Add(c => c.RetailerId).Encoded(false).Sanitized(false).Titled("ID").Filterable(true);
               columns.Add(c => c.RetailerFirmName).Encoded(false).Sanitized(false).Titled("Firm Name").Filterable(true);
               columns.Add(c => c.UploadImagecount).Encoded(false).Sanitized(false).Titled("Upload Image By retailer count").Filterable(true);
               columns.Add(c => c.ApprovedImagecount).Encoded(false).Sanitized(false).Titled("Approved Image count").Filterable(true);
               columns.Add().Encoded(false).Titled("Action").Sanitized(false).RenderValueAs(o => CustomRenderingOfApprovedColumn(o.PromoId, o.RetailerId, o.IsApproved));
               columns.Add().Encoded(false).Titled("View Detail Page").Sanitized(false).RenderValueAs(o => CustomRenderingOfViewColumn(o.PromoId, o.RetailerId));
           }).WithPaging(15).Sortable(true)
            }
        </div>*@
</div>
<script src="@Url.Content("~/Scripts/jquery-1.10.2.min.js")"></script>
@*<script src="@Url.Content("~/Scripts/gridmvc.min.js")"></script>*@

<script src="~/Scripts/jquery.min.js"></script>
<script src="~/Scripts/jquery-ui.min.js"></script>

<script src="~/Scripts/Project/dashboard.js"></script>
<script src="~/Scripts/jquery.table2excel.min.js"></script>

<script>
    var jq = $.noConflict();
    jq(".preloader").hide();
    jq(document).ready(function () {
        if (jq("#export").length > 0) {
            jq("#export").unbind();
            jq("#export").click(function () {
                jq("#retailerStringTable").unbind();
                var dateToday = new Date();
                jq("#retailerStringTable").table2excel({
                    exclude: ".noExl",
                    name: "Excel Document Name",
                    filename: "retailerForPromo-" + dateToday,
                    fileext: ".xls",
                    exclude_img: true,
                    exclude_links: true,
                    exclude_inputs: true
                });
            });
        }
    });

    function ShowDialogue(result, promoId) {
        jq("#responseMessage").html(result.ResponseValue);

        jq("#updatePromoStatusDialog").dialog({
            dialogClass: "noclose"
        });

        jq("#UpdateStatusOkButton").click(function () {
            jq(".ui-dialog-titlebar-close").click();
            window.location.href = '/Dashboard/RetailerListByPromoIdView/' + promoId;
        });
    }
</script>